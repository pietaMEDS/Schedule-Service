function formatScheduleMessage(data, includeGroup = false) {
    if (!data || !data.length) {
        return '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –æ—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö.';
    }

    const daysOfWeek = {
        'MONDAY': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
        'TUESDAY': '–í—Ç–æ—Ä–Ω–∏–∫',
        'WEDNESDAY': '–°—Ä–µ–¥–∞',
        'THURSDAY': '–ß–µ—Ç–≤–µ—Ä–≥',
        'FRIDAY': '–ü—è—Ç–Ω–∏—Ü–∞',
        'SATURDAY': '–°—É–±–±–æ—Ç–∞',
        'SUNDAY': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
    };

    const today = new Date();
    const currentDay = today.getDay();

    let daysToShow = getDaysToShow(currentDay);

    const groupedSchedule = data.reduce((acc, item) => {
        const day = item.dayOfWeek;
        if (daysToShow.includes(day)) {
            if (!acc[day]) {
                acc[day] = [];
            }
            acc[day].push(item);
        }
        return acc;
    }, {});

    let scheduleMessage = '';
    for (const [day, lessons] of Object.entries(groupedSchedule)) {
        scheduleMessage += `${daysOfWeek[day]}\n`;

        lessons.forEach((lesson) => {
            const ordinalEmoji = getOrdinalEmoji(lesson.ordinal);
            let lessonMessage = `${ordinalEmoji} ${lesson.subject} üéì${lesson.teacher} üö™${lesson.location} `;

            if (includeGroup) {
                lessonMessage += `- ${lesson.group.title}`;
            }

            scheduleMessage += lessonMessage + '\n';
        });

        scheduleMessage += '\n';
    }

    return scheduleMessage;
}


function getDaysToShow(currentDay) {
    switch (currentDay) {
        case 0:
            return ['MONDAY', 'TUESDAY', 'WEDNESDAY'];
        case 1:
            return ['MONDAY', 'TUESDAY', 'WEDNESDAY'];
        case 2:
            return ['TUESDAY', 'WEDNESDAY'];
        case 3:
            return ['WEDNESDAY'];
        case 4:
            return ['THURSDAY', 'FRIDAY', 'SATURDAY'];
        case 5:
            return ['FRIDAY', 'SATURDAY'];
        case 6:
            return ['SATURDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY'];
        default:
            return [];
    }
}

function getOrdinalEmoji(ordinal) {
    const emojiMap = {
        1: '1Ô∏è‚É£',
        2: '2Ô∏è‚É£',
        3: '3Ô∏è‚É£',
        4: '4Ô∏è‚É£',
        5: '5Ô∏è‚É£',
        6: '6Ô∏è‚É£',
        7: '7Ô∏è‚É£',
        8: '8Ô∏è‚É£'
    };

    return emojiMap[ordinal] || `${ordinal}Ô∏è‚É£`;
}

module.exports = { formatScheduleMessage };
